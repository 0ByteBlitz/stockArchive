{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\stock app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\stock app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\user\\\\Desktop\\\\stock app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\user\\\\Desktop\\\\stock app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\stock app\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\stock app\\\\frontend\\\\src\\\\components\\\\stocktable.js\";\nimport React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport \"react-table/react-table.css\";\n\nvar Stocktable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stocktable, _Component);\n\n  function Stocktable() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Stocktable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Stocktable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      data: [],\n      id: 0,\n      message: null,\n      intervalIsSet: false,\n      idToDelete: null,\n      idToUpdate: null,\n      objectToUpdate: null\n    };\n\n    _this.getDataFromDb = function () {\n      fetch(\"/api/stocks\").then(function (data) {\n        return data.json();\n      }).then(function (res) {\n        return _this.setState({\n          data: res.data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Stocktable, [{\n    key: \"componentDidMount\",\n    //when component first mounts, it fetchs existing data in db\n    value: function componentDidMount() {\n      this.getDataFromDb();\n\n      if (!this.state.intervalIsSet) {\n        var interval = setInterval(this.getDataFromDb, 1000);\n        this.setState({\n          intervalIsSet: interval\n        });\n      }\n    } //kill process\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.state.intervalIsSet) {\n        clearInterval(this.state.intervalIsSet);\n        this.setState({\n          intervalIsSet: null\n        });\n      }\n    } //fetch data from database\n\n  }, {\n    key: \"render\",\n    //fetch 10 high performing stocks from database\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(ReactTable, {\n        data: data,\n        columns: [{\n          columns: [{\n            Header: \"Symbol\",\n            accessor: \"symbol\"\n          }]\n        }, {\n          Header: \"Stock Info\",\n          columns: [{\n            Header: \"Open\",\n            accessor: \"open\"\n          }, {\n            Header: \"Date\",\n            accessor: \"date\"\n          }, {\n            Header: \"Close\",\n            accessor: \"close\"\n          }, {\n            Header: \"Low\",\n            accessor: \"low\"\n          }, {\n            Header: \"High\",\n            accessor: \"high\"\n          }, {\n            Header: \"Volume\",\n            accessor: \"volume\"\n          }]\n        }],\n        defaultPageSize: 10,\n        defaultSorted: [{\n          id: \"high\",\n          desc: true\n        }],\n        className: \"-striped -highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Stocktable;\n}(Component);\n\nexport default Stocktable;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\stock app\\frontend\\src\\components\\stocktable.js"],"names":["React","Component","ReactTable","Stocktable","state","data","id","message","intervalIsSet","idToDelete","idToUpdate","objectToUpdate","getDataFromDb","fetch","then","json","res","setState","interval","setInterval","clearInterval","columns","Header","accessor","desc"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,6BAAP;;IAEMC,U;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,EAAE,EAAE,CAFE;AAGNC,MAAAA,OAAO,EAAE,IAHH;AAINC,MAAAA,aAAa,EAAE,KAJT;AAKNC,MAAAA,UAAU,EAAE,IALN;AAMNC,MAAAA,UAAU,EAAE,IANN;AAONC,MAAAA,cAAc,EAAE;AAPV,K;;UA+BRC,a,GAAgB,YAAM;AACpBC,MAAAA,KAAK,CAAC,aAAD,CAAL,CACGC,IADH,CACQ,UAAAT,IAAI;AAAA,eAAIA,IAAI,CAACU,IAAL,EAAJ;AAAA,OADZ,EAEGD,IAFH,CAEQ,UAAAE,GAAG;AAAA,eAAG,MAAKC,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAEW,GAAG,CAACX;AAAZ,SAAd,CAAH;AAAA,OAFX;AAGD,K;;;;;;;AAzBD;wCACoB;AAClB,WAAKO,aAAL;;AACA,UAAI,CAAC,KAAKR,KAAL,CAAWI,aAAhB,EAA+B;AAC7B,YAAIU,QAAQ,GAAGC,WAAW,CAAC,KAAKP,aAAN,EAAqB,IAArB,CAA1B;AACA,aAAKK,QAAL,CAAc;AACZT,UAAAA,aAAa,EAAEU;AADH,SAAd;AAGD;AACF,K,CACH;;;;2CACyB;AACrB,UAAI,KAAKd,KAAL,CAAWI,aAAf,EAA8B;AAC5BY,QAAAA,aAAa,CAAC,KAAKhB,KAAL,CAAWI,aAAZ,CAAb;AACA,aAAKS,QAAL,CAAc;AACZT,UAAAA,aAAa,EAAE;AADH,SAAd;AAGD;AACF,K,CAED;;;;AAOA;6BAGS;AAAA,UACCH,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,UAAD;AACA,QAAA,IAAI,EACFA,IAFF;AAIA,QAAA,OAAO,EACL,CAAC;AACGgB,UAAAA,OAAO,EAAE,CAAC;AACNC,YAAAA,MAAM,EAAE,QADF;AAENC,YAAAA,QAAQ,EAAE;AAFJ,WAAD;AADZ,SAAD,EAME;AACED,UAAAA,MAAM,EAAE,YADV;AAEED,UAAAA,OAAO,EAAE,CAAC;AACNC,YAAAA,MAAM,EAAE,MADF;AAENC,YAAAA,QAAQ,EAAE;AAFJ,WAAD,EAIP;AACED,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,QAAQ,EAAE;AAFZ,WAJO,EAQP;AACED,YAAAA,MAAM,EAAE,OADV;AAEEC,YAAAA,QAAQ,EAAE;AAFZ,WARO,EAYP;AACED,YAAAA,MAAM,EAAE,KADV;AAEEC,YAAAA,QAAQ,EAAE;AAFZ,WAZO,EAgBP;AACED,YAAAA,MAAM,EAAE,MADV;AAEEC,YAAAA,QAAQ,EAAE;AAFZ,WAhBO,EAoBP;AACED,YAAAA,MAAM,EAAE,QADV;AAEEC,YAAAA,QAAQ,EAAE;AAFZ,WApBO;AAFX,SANF,CALF;AAyCA,QAAA,eAAe,EACb,EA1CF;AA4CA,QAAA,aAAa,EACX,CAAC;AACCjB,UAAAA,EAAE,EAAE,MADL;AAECkB,UAAAA,IAAI,EAAE;AAFP,SAAD,CA7CF;AAmDA,QAAA,SAAS,EAAG,qBAnDZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CADD;AAwDD;;;;EApGsBvB,S;;AAuGzB,eAAeE,UAAf","sourcesContent":["import React, { Component } from 'react'; \r\nimport ReactTable from 'react-table';\r\nimport \"react-table/react-table.css\";\r\n\r\nclass Stocktable extends Component {\r\n    //state initialization\r\n  state = {\r\n    data: [],\r\n    id: 0,\r\n    message: null,\r\n    intervalIsSet: false,\r\n    idToDelete: null,\r\n    idToUpdate: null,\r\n    objectToUpdate: null\r\n  };\r\n\r\n  //when component first mounts, it fetchs existing data in db\r\n  componentDidMount() {\r\n    this.getDataFromDb();\r\n    if (!this.state.intervalIsSet) {\r\n      let interval = setInterval(this.getDataFromDb, 1000);\r\n      this.setState({\r\n        intervalIsSet: interval\r\n      });\r\n    }\r\n  }\r\n//kill process\r\n  componentWillUnmount() {\r\n    if (this.state.intervalIsSet) {\r\n      clearInterval(this.state.intervalIsSet);\r\n      this.setState({\r\n        intervalIsSet: null\r\n      });\r\n    }\r\n  }\r\n\r\n  //fetch data from database\r\n  getDataFromDb = () => {\r\n    fetch(\"/api/stocks\")\r\n      .then(data => data.json())\r\n      .then(res=> this.setState({ data: res.data}));\r\n  };\r\n\r\n  //fetch 10 high performing stocks from database\r\n  \r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n     <div>\r\n        <ReactTable\r\n        data = {\r\n          data\r\n        }\r\n        columns = {\r\n          [{\r\n              columns: [{\r\n                  Header: \"Symbol\",\r\n                  accessor: \"symbol\"\r\n                }]\r\n            },\r\n            {\r\n              Header: \"Stock Info\",\r\n              columns: [{\r\n                  Header: \"Open\",\r\n                  accessor: \"open\"\r\n                },\r\n                {\r\n                  Header: \"Date\",\r\n                  accessor: \"date\"\r\n                },\r\n                {\r\n                  Header: \"Close\",\r\n                  accessor: \"close\"\r\n                },\r\n                {\r\n                  Header: \"Low\",\r\n                  accessor: \"low\"\r\n                },\r\n                {\r\n                  Header: \"High\",\r\n                  accessor: \"high\"\r\n                },\r\n                {\r\n                  Header: \"Volume\",\r\n                  accessor: \"volume\"\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n        defaultPageSize = {\r\n          10\r\n        }\r\n        defaultSorted = {\r\n          [{\r\n            id: \"high\",\r\n            desc: true\r\n          }]\r\n        }\r\n        \r\n        className = \"-striped -highlight\" />\r\n     </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stocktable;"]},"metadata":{},"sourceType":"module"}